<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>