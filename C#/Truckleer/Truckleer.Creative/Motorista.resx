<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>