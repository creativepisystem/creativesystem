<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        06Z9D/9qOAPJNglGAAAAAElFTkSuQmCC
</value>
  </data>
</root>